-- PC Controls: Q for lock and Q to unlock
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Display control instructions at the top of the screen for 12 seconds
local ControlGui = Instance.new("ScreenGui")
ControlGui.Name = "ControlInstructions"
ControlGui.Parent = game.CoreGui
ControlGui.ResetOnSpawn = false

local ControlFrame = Instance.new("Frame")
ControlFrame.Size = UDim2.new(0, 320, 0, 60)
ControlFrame.Position = UDim2.new(0.5, -160, 0.05, 0)
ControlFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
ControlFrame.BorderSizePixel = 0
ControlFrame.ZIndex = 9
ControlFrame.Parent = ControlGui

-- Add gradient to the frame
local FrameGradient = Instance.new("UIGradient")
FrameGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 40, 100)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 60, 120))
}
FrameGradient.Rotation = 90
FrameGradient.Parent = ControlFrame

-- Add rounded corners
local Corner = Instance.new("UICorner")
Corner.CornerRadius = UDim.new(0, 12)
Corner.Parent = ControlFrame

-- Add a subtle stroke
local FrameStroke = Instance.new("UIStroke")
FrameStroke.Color = Color3.fromRGB(100, 80, 150)
FrameStroke.Thickness = 2
FrameStroke.Parent = ControlFrame

local ControlText = Instance.new("TextLabel")
ControlText.Size = UDim2.new(1, 0, 1, 0)
ControlText.BackgroundTransparency = 1
ControlText.Text = "Q for lock ðŸ”’ and Q for unlock ðŸ”“"
ControlText.TextColor3 = Color3.fromRGB(220, 220, 255)
ControlText.Font = Enum.Font.GothamBold
ControlText.TextSize = 22
ControlText.TextStrokeTransparency = 0.8
ControlText.TextStrokeColor3 = Color3.fromRGB(20, 20, 30)
ControlText.ZIndex = 10
ControlText.Parent = ControlFrame

-- Remove the control text after 12 seconds
delay(12, function()
    local fadeTween = TweenService:Create(
        ControlFrame, 
        TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), 
        {BackgroundTransparency = 1}
    )
    fadeTween:Play()
    
    local textFadeTween = TweenService:Create(
        ControlText, 
        TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), 
        {TextTransparency = 1, TextStrokeTransparency = 1}
    )
    textFadeTween:Play()
    
    fadeTween.Completed:Connect(function()
        ControlGui:Destroy()
    end)
end)

-- Initial loading animation
local LoadingScreen = Instance.new("ScreenGui")
LoadingScreen.Name = "LoadingScreen"
LoadingScreen.Parent = game.CoreGui
LoadingScreen.ResetOnSpawn = false

local LoadingFrame = Instance.new("Frame")
LoadingFrame.Size = UDim2.new(1, 0, 1, 0)
LoadingFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
LoadingFrame.BorderSizePixel = 0
LoadingFrame.ZIndex = 10
LoadingFrame.Parent = LoadingScreen

local LoadingText = Instance.new("TextLabel")
LoadingText.Size = UDim2.new(0, 400, 0, 80)
LoadingText.Position = UDim2.new(0.5, -200, 0.4, -40)
LoadingText.BackgroundTransparency = 1
LoadingText.Text = "kayden-cc"
LoadingText.TextColor3 = Color3.fromRGB(255, 50, 50)
LoadingText.Font = Enum.Font.GothamBlack
LoadingText.TextSize = 36
LoadingText.ZIndex = 11
LoadingText.Parent = LoadingFrame

-- Add glow effect to loading text
local LoadingGlow = Instance.new("UIStroke")
LoadingGlow.Color = Color3.fromRGB(255, 100, 100)
LoadingGlow.Thickness = 3
LoadingGlow.Transparency = 0.5
LoadingGlow.Parent = LoadingText

-- Loading animation function
local function PlayLoadingAnimation()
    local dots = {"", ".", "..", "..."}
    local count = 0
    
    -- Pulse animation
    local pulseTween = TweenService:Create(
        LoadingText, 
        TweenInfo.new(0.8, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut, -1, true), 
        {TextTransparency = 0.2}
    )
    pulseTween:Play()
    
    -- Dots animation
    while count < 12 do -- Run for about 3 seconds
        LoadingText.Text = "kayden-cc" .. dots[(count % 4) + 1]
        count += 1
        wait(0.25)
    end
    
    pulseTween:Cancel()
    
    -- Fade out animation
    local fadeTween = TweenService:Create(
        LoadingFrame, 
        TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut), 
        {BackgroundTransparency = 1}
    )
    fadeTween:Play()
    
    fadeTween.Completed:Connect(function()
        LoadingScreen:Destroy()
        CreateUI() -- Create the main UI after animation completes
    end)
end

-- UI Creation Function
function CreateUI()
    -- UI Setup
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "kaydenccGui"
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ResetOnSpawn = false

    -- Main container for draggable UI
    local MainContainer = Instance.new("Frame")
    MainContainer.Name = "MainContainer"
    MainContainer.Size = UDim2.new(0, 140, 0, 60)
    MainContainer.Position = UDim2.new(0, 10, 0, 10)
    MainContainer.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    MainContainer.BorderColor3 = Color3.fromRGB(60, 60, 60)
    MainContainer.BorderSizePixel = 2
    MainContainer.ZIndex = 2
    MainContainer.Parent = ScreenGui

    -- Lock Button
    local LockButton = Instance.new("TextButton")
    LockButton.Name = "kaydenccButton"
    LockButton.Size = UDim2.new(1, -10, 1, -10)
    LockButton.Position = UDim2.new(0, 5, 0, 5)
    LockButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    LockButton.BorderColor3 = Color3.fromRGB(60, 60, 60)
    LockButton.BorderSizePixel = 2
    LockButton.Text = "kayden-cc"
    LockButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    LockButton.Font = Enum.Font.GothamBold
    LockButton.TextSize = 16
    LockButton.ZIndex = 3
    LockButton.Parent = MainContainer

    -- Button gradient effect
    local ButtonGradient = Instance.new("UIGradient")
    ButtonGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 0, 0)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(120, 0, 0))
    }
    ButtonGradient.Rotation = 90
    ButtonGradient.Parent = LockButton

    -- Notification frame
    local Notification = Instance.new("Frame")
    Notification.Name = "Notification"
    Notification.Size = UDim2.new(0, 220, 0, 60)
    Notification.Position = UDim2.new(0.5, -110, 0, 10)
    Notification.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Notification.BorderColor3 = Color3.fromRGB(60, 60, 60)
    Notification.BorderSizePixel = 2
    Notification.Visible = false
    Notification.ZIndex = 3
    Notification.Parent = ScreenGui

    local NotificationText = Instance.new("TextLabel")
    NotificationText.Name = "NotificationText"
    NotificationText.Size = UDim2.new(1, 0, 1, 0)
    NotificationText.BackgroundTransparency = 1
    NotificationText.Text = "kayden-cc: Press Q to lock"
    NotificationText.TextColor3 = Color3.fromRGB(255, 255, 255)
    NotificationText.Font = Enum.Font.GothamBold
    NotificationText.TextSize = 18
    NotificationText.ZIndex = 4
    NotificationText.Parent = Notification

    -- Animation text
    local AnimationText = Instance.new("TextLabel")
    AnimationText.Name = "AnimationText"
    AnimationText.Size = UDim2.new(0, 400, 0, 80)
    AnimationText.Position = UDim2.new(0.5, -200, 0.4, -40)
    AnimationText.BackgroundTransparency = 1
    AnimationText.Text = ""
    AnimationText.TextColor3 = Color3.fromRGB(255, 50, 50)
    AnimationText.Font = Enum.Font.GothamBlack
    AnimationText.TextSize = 36
    AnimationText.Visible = false
    AnimationText.ZIndex = 5
    AnimationText.Parent = ScreenGui

    -- Add glow effect to animation text
    local TextGlow = Instance.new("UIStroke")
    TextGlow.Color = Color3.fromRGB(255, 100, 100)
    TextGlow.Thickness = 3
    TextGlow.Transparency = 0.5
    TextGlow.Parent = AnimationText

    -- Lock symbol (appears when animation is executed)
    local LockSymbol = Instance.new("ImageLabel")
    LockSymbol.Name = "LockSymbol"
    LockSymbol.Size = UDim2.new(0, 40, 0, 40)
    LockSymbol.AnchorPoint = Vector2.new(0.5, 0.5)
    LockSymbol.BackgroundTransparency = 1
    LockSymbol.Image = "rbxassetid://11305923967" -- Lock icon (replace with your own asset ID if needed)
    LockSymbol.Visible = false
    LockSymbol.ZIndex = 7
    LockSymbol.Parent = ScreenGui

    -- Variables
    local Dragging = false
    local DragStartPosition
    local ContainerStartPosition
    local NotificationShown = false
    local LockedOnTarget = nil
    local LockEnabled = false
    local TargetConnection = nil
    local AnimationPlaying = false
    local TouchInput = nil
    local TouchStartPosition = nil
    local CombatHook = nil
    local LastHitTime = 0
    local HitCooldown = 0.1 -- Cooldown between hits in seconds

    -- Make container draggable with both mouse and touch
    local function EnableDragging(frame)
        local function onInputBegan(input, processed)
            if processed then return end
            
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                Dragging = true
                DragStartPosition = input.Position
                ContainerStartPosition = frame.Position
                
                -- Store touch input for tracking
                if input.UserInputType == Enum.UserInputType.Touch then
                    TouchInput = input
                end
                
                -- Show notification only once when first clicking the button
                if not NotificationShown then
                    Notification.Visible = true
                    NotificationShown = true
                    
                    -- Hide notification after a short time
                    wait(2)
                    Notification.Visible = false
                end
                
                -- Visual feedback when pressed
                LockButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            end
        end
        
        local function onInputEnded(input, processed)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                Dragging = false
                LockButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                
                -- Clear touch input
                if input.UserInputType == Enum.UserInputType.Touch then
                    TouchInput = nil
                    TouchStartPosition = nil
                end
            end
        end
        
        -- Connect input events
        frame.InputBegan:Connect(onInputBegan)
        frame.InputEnded:Connect(onInputEnded)
        UserInputService.InputEnded:Connect(onInputEnded)
        
        -- Handle input changes for both mouse and touch
        UserInputService.InputChanged:Connect(function(input)
            if Dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
               (input.UserInputType == Enum.UserInputType.Touch and input == TouchInput)) then
                local delta = input.Position - DragStartPosition
                frame.Position = UDim2.new(
                    ContainerStartPosition.X.Scale, 
                    ContainerStartPosition.X.Offset + delta.X,
                    ContainerStartPosition.Y.Scale, 
                    ContainerStartPosition.Y.Offset + delta.Y
                )
            end
        end)
    end

    -- Enable dragging for the main container
    EnableDragging(MainContainer)

    -- Animation function
    local function PlayAnimation()
        AnimationText.Visible = true
        local text = "kayden-cc loaded"
        local currentText = ""
        
        -- Letter by letter animation
        for i = 1, #text do
            currentText = currentText .. string.sub(text, i, i)
            AnimationText.Text = currentText
            wait(0.08) -- Speed of letter appearance
        end
        
        -- Wait a moment before disappearing
        wait(1.5)
        
        -- Fade out animation
        local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.InOut)
        local tween = TweenService:Create(AnimationText, tweenInfo, {TextTransparency = 1})
        tween:Play()
        
        tween.Completed:Connect(function()
            AnimationText.Visible = false
            AnimationText.TextTransparency = 0
        end)
    end

    -- Find the player the camera is looking at (MODIFIED TO LOCK THROUGH WALLS)
    local function FindPlayerInSight()
        local closestPlayer = nil
        local closestDistance = math.huge
        
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
                local humanoid = player.Character:FindFirstChild("Humanoid")
                
                if humanoidRootPart and humanoid and humanoid.Health > 0 then
                    -- Check if player is in field of view (REMOVED WALL CHECK)
                    local screenPoint, onScreen = Camera:WorldToViewportPoint(humanoidRootPart.Position)
                    
                    if onScreen then
                        -- Calculate distance from center of screen
                        local center = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                        local playerPos = Vector2.new(screenPoint.X, screenPoint.Y)
                        local distance = (center - playerPos).Magnitude
                        
                        -- Check if player is within a reasonable FOV (60 degrees)
                        local maxFovDistance = 500
                        if distance < maxFovDistance then
                            -- REMOVED RAYCAST CHECK TO ALLOW LOCKING THROUGH WALLS
                            if distance < closestDistance then
                                closestDistance = distance
                                closestPlayer = player
                            end
                        end
                    end
                end
            end
        end
        
        return closestPlayer, closestDistance
    end

    -- Get the aim position (MODIFIED TO ALWAYS AIM AT HUMANOIDROOTPART)
    local function GetAimPosition(character)
        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        
        if humanoidRootPart then
            -- Always aim directly at the HumanoidRootPart
            return humanoidRootPart.Position
        end
        
        return nil
    end

    -- Hook into combat system for 100% hit rate at all distances
    local function SetupCombatHook()
        if CombatHook then
            CombatHook:Disconnect()
            CombatHook = nil
        end
        
        CombatHook = RunService.Heartbeat:Connect(function()
            if LockEnabled and LockedOnTarget and LockedOnTarget.Character then
                local humanoid = LockedOnTarget.Character:FindFirstChildOfClass("Humanoid")
                local humanoidRootPart = LockedOnTarget.Character:FindFirstChild("HumanoidRootPart")
                
                if humanoid and humanoidRootPart then
                    -- Check cooldown to prevent spamming
                    local currentTime = tick()
                    if currentTime - LastHitTime < HitCooldown then
                        return
                    end
                    LastHitTime = currentTime
                    
                    -- Get player's character
                    local localChar = LocalPlayer.Character
                    if not localChar then return end
                    
                    local localHumanoid = localChar:FindFirstChildOfClass("Humanoid")
                    if not localHumanoid then return end
                    
                    -- Find equipped tool
                    local tool = localHumanoid:FindFirstChildOfClass("Tool")
                    
                    -- Try to find combat-related remote events/functions in tool or character
                    local remotes = {}
                    
                    if tool then
                        for _, child in ipairs(tool:GetDescendants()) do
                            if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
                                table.insert(remotes, child)
                            end
                        end
                    end
                    
                    -- Also check character for remotes (some games have them there)
                    for _, child in ipairs(localChar:GetDescendants()) do
                        if (child:IsA("RemoteEvent") or child:IsA("RemoteFunction")) and not table.find(remotes, child) then
                            table.insert(remotes, child)
                        end
                    end
                    
                    -- Get aim position (HumanoidRootPart) - uses the modified function
                    local aimPosition = GetAimPosition(LockedOnTarget.Character)
                    if not aimPosition then
                        aimPosition = humanoidRootPart.Position
                    end
                    
                    -- Try to fire all remotes with perfect hit data
                    for _, remote in ipairs(remotes) do
                        pcall(function()
                            if remote:IsA("RemoteEvent") then
                                -- Fire with perfect hit data (aiming at HumanoidRootPart)
                                remote:FireServer({
                                    Hit = humanoidRootPart,
                                    Target = humanoid,
                                    Position = aimPosition,
                                    Normal = (aimPosition - Camera.CFrame.Position).Unit
                                })
                            elseif remote:IsA("RemoteFunction") then
                                -- Invoke with perfect hit data (aiming at HumanoidRootPart)
                                remote:InvokeServer({
                                    Hit = humanoidRootPart,
                                    Target = humanoid,
                                    Position = aimPosition,
                                    Normal = (aimPosition - Camera.CFrame.Position).Unit
                                })
                            end
                        end)
                    end
                end
            end
        end)
    end

    -- Lock onto the player the camera is looking at
    local function LockOnToPlayer()
        if LockEnabled then
            local targetPlayer, distance = FindPlayerInSight()
            
            if targetPlayer then
                LockedOnTarget = targetPlayer
                
                if LockedOnTarget and LockedOnTarget.Character then
                    LockButton.Text = "Locked: " .. LockedOnTarget.Name
                    LockButton.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
                    
                    -- Show lock symbol
                    LockSymbol.Visible = true
                    
                    -- Setup combat hook for 100% hit rate
                    SetupCombatHook()
                    
                    -- Update lock symbol position and camera
                    if TargetConnection then
                        TargetConnection:Disconnect()
                    end
                    
                    TargetConnection = RunService.RenderStepped:Connect(function()
                        if LockedOnTarget and LockedOnTarget.Character then
                            local humanoidRootPart = LockedOnTarget.Character:FindFirstChild("HumanoidRootPart")
                            local humanoid = LockedOnTarget.Character:FindFirstChildOfClass("Humanoid")
                            
                            if humanoidRootPart then
                                -- Get aim position (HumanoidRootPart) - uses the modified function
                                local aimPosition = GetAimPosition(LockedOnTarget.Character)
                                if not aimPosition then
                                    aimPosition = humanoidRootPart.Position
                                end
                                
                                local position, onScreen = Camera:WorldToViewportPoint(aimPosition)
                                if onScreen then
                                    -- Position lock symbol above HumanoidRootPart
                                    LockSymbol.Position = UDim2.new(0, position.X, 0, position.Y - 50)
                                    
                                    -- Pulse effect for lock symbol
                                    local pulse = math.sin(tick() * 5) * 0.2 + 1
                                    LockSymbol.Size = UDim2.new(0, 40 * pulse, 0, 40 * pulse)
                                    
                                    -- 100% ACCURACY: Directly aim at target's HumanoidRootPart (even through walls)
                                    Camera.CFrame = CFrame.new(Camera.CFrame.Position, aimPosition)
                                else
                                    LockSymbol.Visible = false
                                end
                            else
                                LockSymbol.Visible = false
                            end
                        else
                            LockSymbol.Visible = false
                        end
                    end)
                end
            else
                LockButton.Text = "No Target Found"
                wait(1)
                LockButton.Text = "kayden-cc"
                LockButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                LockSymbol.Visible = false
                
                if CombatHook then
                    CombatHook:Disconnect()
                    CombatHook = nil
                end
            end
        end
    end

    -- Toggle lock mode
    LockButton.MouseButton1Click:Connect(function()
        LockEnabled = not LockEnabled
        
        if LockEnabled then
            LockButton.Text = "Locking..."
            LockOnToPlayer()
        else
            LockButton.Text = "kayden-cc"
            LockButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
            LockedOnTarget = nil
            LockSymbol.Visible = false
            
            if TargetConnection then
                TargetConnection:Disconnect()
                TargetConnection = nil
            end
            
            if CombatHook then
                CombatHook:Disconnect()
                CombatHook = nil
            end
        end
    end)

    -- Quick lock with Q key
    UserInputService.InputBegan:Connect(function(input, processed)
        if processed then return end
        
        if input.KeyCode == Enum.KeyCode.Q then
            LockEnabled = not LockEnabled
            
            if LockEnabled then
                LockButton.Text = "Locking..."
                LockOnToPlayer()
            else
                LockButton.Text = "kayden-cc"
                LockButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
                LockedOnTarget = nil
                LockSymbol.Visible = false
                
                if TargetConnection then
                    TargetConnection:Disconnect()
                    TargetConnection = nil
                end
                
                if CombatHook then
                    CombatHook:Disconnect()
                    CombatHook = nil
                end
            end
        end
    end)

    -- Play animation on UI creation
    PlayAnimation()

    print("kayden-cc UI loaded - Press the button or Q key to lock onto the closest player")
end

-- Start the loading animation
PlayLoadingAnimation()
